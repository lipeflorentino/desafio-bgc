# serverless.yml

service: serverless-app

custom:
  tableName: 'users'
  minionTableName: 'minions'
  carrinhoTableName: 'carrinhos'

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["MinionsDynamoDBTable","Arn" ] }
        - { "Fn::GetAtt": ["CarrinhosDynamoDBTable","Arn" ] }
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"
  environment:
    USERS_TABLE: ${self:custom.tableName}
    MINIONS_TABLE: ${self:custom.minionTableName}
    CARRINHOS_TABLE: ${self:custom.carrinhoTableName}

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

plugins:
  - serverless-offline        